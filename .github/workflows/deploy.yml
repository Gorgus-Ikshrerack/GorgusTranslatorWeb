name: Deploy to GitHub Pages

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  EM_VERSION: 4.0.5
  #EM_CACHE_FOLDER: "emsdk-cache"
  USE_CCACHE: 'true'
  CCACHE_DIR: "ccache-dir"
  PYTHON_VERSION: '3.14'

jobs:
  build_site:
    runs-on: ubuntu-latest
    steps:
      - name: Update APT
        run: sudo apt-get update

      - name: Install CCache
        if: env.USE_CCACHE == 'true'
        run: sudo apt-get install ccache -y

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: pnpm

      - name: Checkout Python
        if: ${{ env.PYTHON_VERSION != '3.14' }}
        uses: actions/checkout@v4
        with:
          repository: 'python/cpython'
          path: "cpython"
          ref: ${{ env.PYTHON_VERSION }}

      - name: Checkout Python (No Explict Ref)
        if: ${{ env.PYTHON_VERSION == '3.14' }}
        uses: actions/checkout@v4
        with:
          repository: 'python/cpython'
          path: "cpython"

      - name: Setup EMSDK Cache
        id: cache-em-cache
        uses: actions/cache@v4
        with:
          path: |
            emsdk
            ${{ env.EM_CACHE_FOLDER }}
            ${{ env.CCACHE_DIR }}
          key: emsdk-${{env.EM_VERSION}}-${{ runner.os }}

      #- name: Setup EMSDK
      #  uses: mymindstorm/setup-emsdk@v14
      #  with:
      #    version: ${{env.EM_VERSION}}
      #    actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
      #    no-cache: 'true'

      - name: Checkout EMSDK
        if: steps.cache-em-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: 'emscripten-core/emsdk'
          path: "emsdk"

      - name: Setup EMSDK
        if: steps.cache-em-cache.outputs.cache-hit != 'true'
        run: |
          cd emsdk
          ./emsdk install ${{ env.EM_VERSION }}
          ./emsdk activate ${{ env.EM_VERSION }}
          cd ..

      - name: Add EMSDK to Environment
        run: |
          EMSDK_CMD=1 ./emsdk/emsdk construct_env
          sed -i "s/SET //g" ./emsdk/emsdk_set_env.bat
          mv ./emsdk/emsdk_set_env.bat ./emsdk/emsdk_set_env
          cat ./emsdk/emsdk_set_env >> $GITHUB_ENV

      #- name: Print PATH
      #  run: |
      #    echo $PATH

      - name: Use CCache
        if: env.USE_CCACHE == 'true'
        run: |
          echo "EM_COMPILER_WRAPPER=ccache" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install

      - name: Setup CPython Config Cache
        id: cache-cpython-config-cache
        uses: actions/cache@v4
        with:
          path: |
            **/config.cache
          key: cpython-config-cache-${{ runner.os }}

      - name: Build Emscripten CPython
        run: ./get_python_wasm.ps1 ${{ env.PYTHON_VERSION }} $false
        shell: pwsh

      - name: Download PIP Dependencies
        run: ./download_pip.ps1
        shell: pwsh

      - name: Download NLTK Dependencies
        run: ./download_nltk.ps1
        shell: pwsh

      - name: build
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
        run: |
          pnpm run build

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build/'

  deploy:
    needs: build_site
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4